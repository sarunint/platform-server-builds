{"version":3,"file":"tokens.js","sourceRoot":"","sources":["../../../../../packages/platform-server/src/tokens.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAC,cAAc,EAAC,MAAM,eAAe,CAAC;;;;;;;;;;;;;;;;;AAiB7C,WAAa,cAAc,GAAG,IAAI,cAAc,CAAiB,uBAAuB,CAAC,CAAC;;;;;;;AAQ1F,WAAa,qBAAqB,GAC9B,IAAI,cAAc,CAAoB,2BAA2B,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Config object passed to initialize the platform.\n *\n * @publicApi\n */\nexport interface PlatformConfig {\n  document?: string;\n  url?: string;\n}\n\n/**\n * The DI token for setting the initial config for the platform.\n *\n * @publicApi\n */\nexport const INITIAL_CONFIG = new InjectionToken<PlatformConfig>('Server.INITIAL_CONFIG');\n\n/**\n * A function that will be executed when calling `renderModuleFactory` or `renderModule` just\n * before current platform state is rendered to string.\n *\n * @publicApi\n */\nexport const BEFORE_APP_SERIALIZED =\n    new InjectionToken<Array<() => void>>('Server.RENDER_MODULE_HOOK');\n"]}