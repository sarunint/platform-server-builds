{"version":3,"file":"platform_state.js","sourceRoot":"","sources":["../../../../../packages/platform-server/src/platform_state.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAC,MAAM,EAAE,UAAU,EAAC,MAAM,eAAe,CAAC;AACjD,OAAO,EAAC,QAAQ,EAAoB,MAAM,2BAA2B,CAAC;AAEtE,OAAO,EAAC,iBAAiB,EAAC,MAAM,kBAAkB,CAAC;;;;;;;IASjD,uBAAsC,IAAS;QAAT,SAAI,GAAJ,IAAI,CAAK;KAAI;IAEnD;;OAEG;;;;;IACH,sCAAc;;;;IAAd,cAA2B,OAAO,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;IAEjE;;OAEG;;;;;IACH,mCAAW;;;;IAAX,cAAqB,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE;;gBAZzC,UAAU;;;;gDAEI,MAAM,SAAC,QAAQ;;wBApB9B;;SAmBa,aAAa","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable} from '@angular/core';\nimport {DOCUMENT, ÉµgetDOM as getDOM} from '@angular/platform-browser';\n\nimport {serializeDocument} from './domino_adapter';\n\n/**\n * Representation of the current platform state.\n *\n * @publicApi\n */\n@Injectable()\nexport class PlatformState {\n  constructor(@Inject(DOCUMENT) private _doc: any) {}\n\n  /**\n   * Renders the current state of the platform to string.\n   */\n  renderToString(): string { return serializeDocument(this._doc); }\n\n  /**\n   * Returns the current DOM state.\n   */\n  getDocument(): any { return this._doc; }\n}\n"]}