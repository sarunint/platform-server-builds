{"version":3,"file":"http.js","sourceRoot":"","sources":["../../../../../packages/platform-server/src/http.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst xhr2: any = require('xhr2');\n\nimport {Injectable, Injector, Optional, Provider, InjectFlags} from '@angular/core';\nimport {BrowserXhr, Connection, ConnectionBackend, Http, ReadyState, Request, RequestOptions, Response, XHRBackend, XSRFStrategy} from '@angular/http';\n\nimport {HttpEvent, HttpRequest, HttpHandler, HttpInterceptor, HTTP_INTERCEPTORS, HttpBackend, XhrFactory, ÉµHttpInterceptingHandler as HttpInterceptingHandler} from '@angular/common/http';\n\nimport {Observable, Observer, Subscription} from 'rxjs';\n\nconst isAbsoluteUrl = /^[a-zA-Z\\-\\+.]+:\\/\\//;\n\nfunction validateRequestUrl(url: string): void {\n  if (!isAbsoluteUrl.test(url)) {\n    throw new Error(`URLs requested via Http on the server must be absolute. URL: ${url}`);\n  }\n}\n\n@Injectable()\nexport class ServerXhr implements BrowserXhr {\n  build(): XMLHttpRequest { return new xhr2.XMLHttpRequest(); }\n}\n\n@Injectable()\nexport class ServerXsrfStrategy implements XSRFStrategy {\n  configureRequest(req: Request): void {}\n}\n\nexport abstract class ZoneMacroTaskWrapper<S, R> {\n  wrap(request: S): Observable<R> {\n    return new Observable((observer: Observer<R>) => {\n      let task: Task = null !;\n      let scheduled: boolean = false;\n      let sub: Subscription|null = null;\n      let savedResult: any = null;\n      let savedError: any = null;\n\n      const scheduleTask = (_task: Task) => {\n        task = _task;\n        scheduled = true;\n\n        const delegate = this.delegate(request);\n        sub = delegate.subscribe(\n            res => savedResult = res,\n            err => {\n              if (!scheduled) {\n                throw new Error(\n                    'An http observable was completed twice. This shouldn\\'t happen, please file a bug.');\n              }\n              savedError = err;\n              scheduled = false;\n              task.invoke();\n            },\n            () => {\n              if (!scheduled) {\n                throw new Error(\n                    'An http observable was completed twice. This shouldn\\'t happen, please file a bug.');\n              }\n              scheduled = false;\n              task.invoke();\n            });\n      };\n\n      const cancelTask = (_task: Task) => {\n        if (!scheduled) {\n          return;\n        }\n        scheduled = false;\n        if (sub) {\n          sub.unsubscribe();\n          sub = null;\n        }\n      };\n\n      const onComplete = () => {\n        if (savedError !== null) {\n          observer.error(savedError);\n        } else {\n          observer.next(savedResult);\n          observer.complete();\n        }\n      };\n\n      // MockBackend for Http is synchronous, which means that if scheduleTask is by\n      // scheduleMacroTask, the request will hit MockBackend and the response will be\n      // sent, causing task.invoke() to be called.\n      const _task = Zone.current.scheduleMacroTask(\n          'ZoneMacroTaskWrapper.subscribe', onComplete, {}, () => null, cancelTask);\n      scheduleTask(_task);\n\n      return () => {\n        if (scheduled && task) {\n          task.zone.cancelTask(task);\n          scheduled = false;\n        }\n        if (sub) {\n          sub.unsubscribe();\n          sub = null;\n        }\n      };\n    });\n  }\n\n  protected abstract delegate(request: S): Observable<R>;\n}\n\nexport class ZoneMacroTaskConnection extends ZoneMacroTaskWrapper<Request, Response> implements\n    Connection {\n  response: Observable<Response>;\n  // TODO(issue/24571): remove '!'.\n  lastConnection !: Connection;\n\n  constructor(public request: Request, private backend: XHRBackend) {\n    super();\n    validateRequestUrl(request.url);\n    this.response = this.wrap(request);\n  }\n\n  delegate(request: Request): Observable<Response> {\n    this.lastConnection = this.backend.createConnection(request);\n    return this.lastConnection.response as Observable<Response>;\n  }\n\n  get readyState(): ReadyState {\n    return !!this.lastConnection ? this.lastConnection.readyState : ReadyState.Unsent;\n  }\n}\n\nexport class ZoneMacroTaskBackend implements ConnectionBackend {\n  constructor(private backend: XHRBackend) {}\n\n  createConnection(request: any): ZoneMacroTaskConnection {\n    return new ZoneMacroTaskConnection(request, this.backend);\n  }\n}\n\nexport class ZoneClientBackend extends\n    ZoneMacroTaskWrapper<HttpRequest<any>, HttpEvent<any>> implements HttpBackend {\n  constructor(private backend: HttpBackend) { super(); }\n\n  handle(request: HttpRequest<any>): Observable<HttpEvent<any>> { return this.wrap(request); }\n\n  protected delegate(request: HttpRequest<any>): Observable<HttpEvent<any>> {\n    return this.backend.handle(request);\n  }\n}\n\nexport function httpFactory(xhrBackend: XHRBackend, options: RequestOptions) {\n  const macroBackend = new ZoneMacroTaskBackend(xhrBackend);\n  return new Http(macroBackend, options);\n}\n\nexport function zoneWrappedInterceptingHandler(backend: HttpBackend, injector: Injector) {\n  const realBackend: HttpBackend = new HttpInterceptingHandler(backend, injector);\n  return new ZoneClientBackend(realBackend);\n}\n\nexport const SERVER_HTTP_PROVIDERS: Provider[] = [\n  {provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions]},\n  {provide: BrowserXhr, useClass: ServerXhr}, {provide: XSRFStrategy, useClass: ServerXsrfStrategy},\n  {provide: XhrFactory, useClass: ServerXhr}, {\n    provide: HttpHandler,\n    useFactory: zoneWrappedInterceptingHandler,\n    deps: [HttpBackend, Injector]\n  }\n];\n"]}