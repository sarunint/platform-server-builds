{"version":3,"file":"server_events.js","sourceRoot":"","sources":["../../../../../packages/platform-server/src/server_events.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAC,MAAM,EAAE,UAAU,EAAC,MAAM,eAAe,CAAC;AACjD,OAAO,EAAC,QAAQ,EAAE,OAAO,IAAI,MAAM,EAAC,MAAM,2BAA2B,CAAC;;IAIpE,kCAAsC,GAAQ;QAAR,QAAG,GAAH,GAAG,CAAK;KAAI;IAElD,mCAAmC;;;;;IACnC,2CAAQ;;;;IAAR,UAAS,SAAiB,IAAI,OAAO,IAAI,CAAC,EAAE;;;;;;;IAE5C,mDAAgB;;;;;;IAAhB,UAAiB,OAAoB,EAAE,SAAiB,EAAE,OAAiB;QACzE,OAAO,MAAM,EAAE,CAAC,WAAW,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;KAC1D;;;;;;;IAED,yDAAsB;;;;;;IAAtB,UAAuB,OAAe,EAAE,SAAiB,EAAE,OAAiB;;QAC1E,IAAM,MAAM,GAAgB,MAAM,EAAE,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QAC7E,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,IAAI,KAAK,CAAC,8BAA4B,MAAM,mBAAc,SAAW,CAAC,CAAC;SAC9E;QACD,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;KAC1D;;gBAjBF,UAAU;;;;gDAEI,MAAM,SAAC,QAAQ;;mCAb9B;;SAYa,wBAAwB","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable} from '@angular/core';\nimport {DOCUMENT, ÉµgetDOM as getDOM} from '@angular/platform-browser';\n\n@Injectable()\nexport class ServerEventManagerPlugin /* extends EventManagerPlugin which is private */ {\n  constructor(@Inject(DOCUMENT) private doc: any) {}\n\n  // Handle all events on the server.\n  supports(eventName: string) { return true; }\n\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    return getDOM().onAndCancel(element, eventName, handler);\n  }\n\n  addGlobalEventListener(element: string, eventName: string, handler: Function): Function {\n    const target: HTMLElement = getDOM().getGlobalEventTarget(this.doc, element);\n    if (!target) {\n      throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n    }\n    return this.addEventListener(target, eventName, handler);\n  }\n}\n"]}