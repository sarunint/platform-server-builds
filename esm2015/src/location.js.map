{"version":3,"file":"location.js","sourceRoot":"","sources":["../../../../packages/platform-server/src/location.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationChangeEvent, LocationChangeListener, PlatformLocation} from '@angular/common';\nimport {Inject, Injectable, Optional} from '@angular/core';\nimport {DOCUMENT, ÉµgetDOM as getDOM} from '@angular/platform-browser';\nimport {Subject} from 'rxjs';\nimport * as url from 'url';\nimport {INITIAL_CONFIG, PlatformConfig} from './tokens';\n\n\nfunction parseUrl(urlStr: string): {pathname: string, search: string, hash: string} {\n  const parsedUrl = url.parse(urlStr);\n  return {\n    pathname: parsedUrl.pathname || '',\n    search: parsedUrl.search || '',\n    hash: parsedUrl.hash || '',\n  };\n}\n\n/**\n * Server-side implementation of URL state. Implements `pathname`, `search`, and `hash`\n * but not the state stack.\n */\n@Injectable()\nexport class ServerPlatformLocation implements PlatformLocation {\n  public readonly pathname: string = '/';\n  public readonly search: string = '';\n  public readonly hash: string = '';\n  private _hashUpdate = new Subject<LocationChangeEvent>();\n\n  constructor(\n      @Inject(DOCUMENT) private _doc: any, @Optional() @Inject(INITIAL_CONFIG) _config: any) {\n    const config = _config as PlatformConfig | null;\n    if (!!config && !!config.url) {\n      const parsedUrl = parseUrl(config.url);\n      this.pathname = parsedUrl.pathname;\n      this.search = parsedUrl.search;\n      this.hash = parsedUrl.hash;\n    }\n  }\n\n  getBaseHrefFromDOM(): string { return getDOM().getBaseHref(this._doc) !; }\n\n  onPopState(fn: LocationChangeListener): void {\n    // No-op: a state stack is not implemented, so\n    // no events will ever come.\n  }\n\n  onHashChange(fn: LocationChangeListener): void { this._hashUpdate.subscribe(fn); }\n\n  get url(): string { return `${this.pathname}${this.search}${this.hash}`; }\n\n  private setHash(value: string, oldUrl: string) {\n    if (this.hash === value) {\n      // Don't fire events if the hash has not changed.\n      return;\n    }\n    (this as{hash: string}).hash = value;\n    const newUrl = this.url;\n    scheduleMicroTask(() => this._hashUpdate.next({\n      type: 'hashchange', state: null, oldUrl, newUrl\n    } as LocationChangeEvent));\n  }\n\n  replaceState(state: any, title: string, newUrl: string): void {\n    const oldUrl = this.url;\n    const parsedUrl = parseUrl(newUrl);\n    (this as{pathname: string}).pathname = parsedUrl.pathname;\n    (this as{search: string}).search = parsedUrl.search;\n    this.setHash(parsedUrl.hash, oldUrl);\n  }\n\n  pushState(state: any, title: string, newUrl: string): void {\n    this.replaceState(state, title, newUrl);\n  }\n\n  forward(): void { throw new Error('Not implemented'); }\n\n  back(): void { throw new Error('Not implemented'); }\n}\n\nexport function scheduleMicroTask(fn: Function) {\n  Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n"]}