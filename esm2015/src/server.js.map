{"version":3,"file":"server.js","sourceRoot":"","sources":["../../../../packages/platform-server/src/server.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵAnimationEngine} from '@angular/animations/browser';\nimport {PlatformLocation, ViewportScroller, ɵNullViewportScroller as NullViewportScroller, ɵPLATFORM_SERVER_ID as PLATFORM_SERVER_ID} from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport {Injectable, InjectionToken, Injector, NgModule, NgZone, Optional, PLATFORM_ID, PLATFORM_INITIALIZER, PlatformRef, Provider, RendererFactory2, RootRenderer, StaticProvider, Testability, createPlatformFactory, isDevMode, platformCore, ɵALLOW_MULTIPLE_PLATFORMS as ALLOW_MULTIPLE_PLATFORMS} from '@angular/core';\nimport {HttpModule} from '@angular/http';\nimport {BrowserModule, DOCUMENT, EVENT_MANAGER_PLUGINS, ɵSharedStylesHost as SharedStylesHost, ɵTRANSITION_ID, ɵgetDOM as getDOM} from '@angular/platform-browser';\nimport {ɵplatformCoreDynamic as platformCoreDynamic} from '@angular/platform-browser-dynamic';\nimport {NoopAnimationsModule, ɵAnimationRendererFactory} from '@angular/platform-browser/animations';\n\nimport {DominoAdapter, parseDocument} from './domino_adapter';\nimport {SERVER_HTTP_PROVIDERS} from './http';\nimport {ServerPlatformLocation} from './location';\nimport {PlatformState} from './platform_state';\nimport {ServerEventManagerPlugin} from './server_events';\nimport {ServerRendererFactory2} from './server_renderer';\nimport {ServerStylesHost} from './styles_host';\nimport {INITIAL_CONFIG, PlatformConfig} from './tokens';\n\nfunction notSupported(feature: string): Error {\n  throw new Error(`platform-server does not support '${feature}'.`);\n}\n\nexport const INTERNAL_SERVER_PLATFORM_PROVIDERS: StaticProvider[] = [\n  {provide: DOCUMENT, useFactory: _document, deps: [Injector]},\n  {provide: PLATFORM_ID, useValue: PLATFORM_SERVER_ID},\n  {provide: PLATFORM_INITIALIZER, useFactory: initDominoAdapter, multi: true, deps: [Injector]}, {\n    provide: PlatformLocation,\n    useClass: ServerPlatformLocation,\n    deps: [DOCUMENT, [Optional, INITIAL_CONFIG]]\n  },\n  {provide: PlatformState, deps: [DOCUMENT]},\n  // Add special provider that allows multiple instances of platformServer* to be created.\n  {provide: ALLOW_MULTIPLE_PLATFORMS, useValue: true}\n];\n\nfunction initDominoAdapter(injector: Injector) {\n  return () => { DominoAdapter.makeCurrent(); };\n}\n\nexport function instantiateServerRendererFactory(\n    renderer: RendererFactory2, engine: ɵAnimationEngine, zone: NgZone) {\n  return new ɵAnimationRendererFactory(renderer, engine, zone);\n}\n\nexport const SERVER_RENDER_PROVIDERS: Provider[] = [\n  ServerRendererFactory2,\n  {\n    provide: RendererFactory2,\n    useFactory: instantiateServerRendererFactory,\n    deps: [ServerRendererFactory2, ɵAnimationEngine, NgZone]\n  },\n  ServerStylesHost,\n  {provide: SharedStylesHost, useExisting: ServerStylesHost},\n  {provide: EVENT_MANAGER_PLUGINS, multi: true, useClass: ServerEventManagerPlugin},\n];\n\n/**\n * The ng module for the server.\n *\n * @publicApi\n */\n@NgModule({\n  exports: [BrowserModule],\n  imports: [HttpModule, HttpClientModule, NoopAnimationsModule],\n  providers: [\n    SERVER_RENDER_PROVIDERS,\n    SERVER_HTTP_PROVIDERS,\n    {provide: Testability, useValue: null},\n    {provide: ViewportScroller, useClass: NullViewportScroller},\n  ],\n})\nexport class ServerModule {\n}\n\nfunction _document(injector: Injector) {\n  let config: PlatformConfig|null = injector.get(INITIAL_CONFIG, null);\n  if (config && config.document) {\n    return parseDocument(config.document, config.url);\n  } else {\n    return getDOM().createHtmlDocument();\n  }\n}\n\n/**\n * @publicApi\n */\nexport const platformServer =\n    createPlatformFactory(platformCore, 'server', INTERNAL_SERVER_PLATFORM_PROVIDERS);\n\n/**\n * The server platform that supports the runtime compiler.\n *\n * @publicApi\n */\nexport const platformDynamicServer =\n    createPlatformFactory(platformCoreDynamic, 'serverDynamic', INTERNAL_SERVER_PLATFORM_PROVIDERS);\n"]}